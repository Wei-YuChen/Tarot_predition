workflows:
  mystic_tarot_static_export:
    name: Mystic Tarot Static Export
    max_build_duration: 60
    environment:
      node: 18
      vars:
        CI: 'true'
    cache:
      cache_paths:
        - $HOME/.npm
    scripts:
      - name: Install dependencies
        script: |
          npm install --no-progress
      - name: Lint
        script: |
          npm run lint
      - name: Type check
        script: |
          npm run type-check
      - name: Build static export for Capacitor shells
        script: |
          npm run build:app
      - name: Archive static export for download
        script: |
          tar -czf apps-web-out.tar.gz -C .next .
    artifacts:
      - apps-web-out.tar.gz
      - .next/**
    publishing:
      email:
        recipients:
          - highandhigh96@hotmail.com
          - fish760217@gmail.com
        notify:
          success: true
          failure: true

  mystic_tarot_ios:
    name: Mystic Tarot iOS
    max_build_duration: 120
    environment:
      node: 18
      xcode: latest
      cocoapods: default
      vars:
        CI: 'true'
    cache:
      cache_paths:
        - $HOME/.npm
        - $HOME/Library/Caches/CocoaPods
    scripts:
      - name: Install dependencies
        script: |
          npm install --no-progress
      - name: Build and sync static export
        script: |
          npm run build:app
      - name: Update iOS dependencies
        script: |
          cd ios/App && pod install
      - name: Build iOS app
        script: |
          xcode-project build-ipa \
            --workspace ios/App/App.xcworkspace \
            --scheme App
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - highandhigh96@hotmail.com
          - fish760217@gmail.com
        notify:
          success: true
          failure: true

  mystic_tarot_android:
    name: Mystic Tarot Android
    max_build_duration: 120
    environment:
      node: 18
      java: 17
      groups:
        - android_signing   # CM_KEYSTORE / CM_KEYSTORE_PASSWORD / CM_KEY_ALIAS / CM_KEY_PASSWORD
      vars:
        CI: 'true'
    cache:
      cache_paths:
        - $HOME/.npm
        - $HOME/.gradle/caches

    scripts:
      - name: Install dependencies
        script: |
          npm install --no-progress

      - name: Build and sync static export
        script: |
          npm run build:app

      - name: Prepare Android signing keystore
        script: |
          # 清理 Base64 的空白/換行並嘗試多種 base64 參數，還原到 android/app
          mkdir -p $CM_BUILD_DIR/android/app
          CLEANED=$(printf "%s" "$CM_KEYSTORE" | tr -d ' \n\r\t')
          ( printf "%s" "$CLEANED" | base64 -d 2>/dev/null || \
            printf "%s" "$CLEANED" | base64 --decode 2>/dev/null || \
            printf "%s" "$CLEANED" | base64 -D 2>/dev/null ) \
            > $CM_BUILD_DIR/android/app/upload-keystore.jks

      - name: Inspect env & keystore (debug)
        script: |
          set -euo pipefail
          echo "ALIAS=[$CM_KEY_ALIAS]"
          echo "STOREPASS_LEN=${#CM_KEYSTORE_PASSWORD}"
          echo "KEYPASS_LEN=${#CM_KEY_PASSWORD}"
          cd $CM_BUILD_DIR/android/app
          python3 -c 'import hashlib,sys; b=open("upload-keystore.jks","rb").read(); print("JKS size:",len(b)); print("JKS sha256:",hashlib.sha256(b).hexdigest())'

      - name: Verify keystore (debug)
        script: |
          set -euo pipefail
          cd $CM_BUILD_DIR/android/app
          echo "== list aliases (storepass) =="
          keytool -list -keystore upload-keystore.jks -storepass "$CM_KEYSTORE_PASSWORD"
          echo "== open target alias (storepass + keypass) =="
          keytool -list -v -keystore upload-keystore.jks \
            -alias "$CM_KEY_ALIAS" \
            -storepass "$CM_KEYSTORE_PASSWORD" \
            -keypass "$CM_KEY_PASSWORD"
          echo "OK: alias+password match"

      - name: Make gradlew executable
        script: |
          cd android
          chmod +x ./gradlew

      - name: Build Android AAB (release)
        script: |
          cd android
          ./gradlew bundleRelease --stacktrace

      - name: Build Android APK (debug)   # 可選
        script: |
          cd android
          ./gradlew assembleDebug --stacktrace

    artifacts:
      - android/app/build/outputs/bundle/release/app-release.aab
      - android/app/build/outputs/**/*.apk

    publishing:
      email:
        recipients:
          - highandhigh96@hotmail.com
          - fish760217@gmail.com
        notify:
          success: true
          failure: true
